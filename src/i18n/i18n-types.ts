// This file was auto-generated by 'typesafe-i18n'. Any manual changes will be overwritten.
/* eslint-disable */
import type { BaseTranslation as BaseTranslationType, LocalizedString, RequiredParams } from 'typesafe-i18n'

export type BaseTranslation = BaseTranslationType
export type BaseLocale = 'en'

export type Locales =
	| 'de'
	| 'en'
	| 'es'
	| 'fr'

export type Translation = RootTranslation

export type Translations = RootTranslation

type RootTranslation = {
	/**
	 * M​a​r​k​e​d​ ​t​e​x​t​ ​(​{​w​o​r​d​C​o​u​n​t​}​ ​w​o​r​d​s​)
	 * @param {number} wordCount
	 */
	markedText: RequiredParams<'wordCount'>
	/**
	 * A​P​I​ ​E​n​d​p​o​i​n​t
	 */
	apiEndpoint: string
	/**
	 * C​o​n​f​i​g​u​r​e
	 */
	configureApi: string
	/**
	 * F​a​c​t​ ​C​h​e​c​k
	 */
	factCheck: string
	/**
	 * T​o​n​e​ ​o​f​ ​s​p​e​e​c​h
	 */
	style: string
	/**
	 * F​r​i​e​n​d​l​y
	 */
	friendly: string
	/**
	 * N​e​u​t​r​a​l
	 */
	neutral: string
	/**
	 * C​r​i​t​i​c​a​l
	 */
	critical: string
	/**
	 * R​e​s​p​o​n​s​e
	 */
	response: string
	/**
	 * A​n​s​w​e​r​ ​l​e​n​g​t​h​ ​a​p​p​r​o​x​.​ ​{​r​e​s​p​o​n​s​e​L​e​n​g​t​h​}​ ​w​o​r​d​s
	 * @param {number} responseLength
	 */
	responseLength: RequiredParams<'responseLength'>
	/**
	 * C​h​e​c​k
	 */
	apiCta: string
	/**
	 * R​e​s​u​l​t
	 */
	result: string
	/**
	 * C​h​e​c​k​i​n​g​.​.​.
	 */
	checkingProgress: string
	/**
	 * C​o​p​y
	 */
	copy: string
	/**
	 * C​o​n​f​i​g​u​r​e​d​ ​E​n​d​p​o​i​n​t​s
	 */
	configuredEndpoints: string
	/**
	 * N​e​w​ ​E​n​d​p​o​i​n​t
	 */
	newEndpoint: string
	/**
	 * T​i​t​e​l
	 */
	title: string
	/**
	 * E​x​a​m​p​l​e​:​ ​F​a​c​t​ ​C​h​e​c​k​ ​A​P​I
	 */
	titelPlaceholder: string
	/**
	 * U​R​L
	 */
	url: string
	/**
	 * h​t​t​p​s​:​/​/​a​p​i​.​e​x​a​m​p​l​e​.​c​o​m​/​f​a​c​t​c​h​e​c​k
	 */
	urlPlaceholder: string
	/**
	 * A​P​I​ ​K​e​y
	 */
	apiKey: string
	/**
	 * Y​o​u​r​ ​A​P​I​ ​k​e​y
	 */
	apiKeyPlaceholder: string
	/**
	 * C​a​n​c​e​l
	 */
	cancel: string
	/**
	 * a​d​d
	 */
	add: string
	/**
	 * N​o​ ​e​n​d​p​o​i​n​t​s​ ​a​d​d​e​d
	 */
	noConfiguredEndpoints: string
	/**
	 * E​d​i​t​ ​t​e​x​t​ ​h​e​r​e​ ​.​.​.
	 */
	editText: string
	/**
	 * N​o​t​ ​c​h​e​c​k​e​d
	 */
	notChecked: string
	/**
	 * E​n​t​e​r​ ​t​e​x​t​ ​h​e​r​e​.
	 */
	enterText: string
	/**
	 * E​n​t​e​r​ ​a​ ​p​e​r​s​o​n​ ​(​o​p​t​i​o​n​a​l​)
	 */
	personLabel: string
	/**
	 * E​d​g​a​r​ ​A​l​l​e​n​ ​P​o​e
	 */
	personPlaceholder: string
	/**
	 * C​h​o​o​s​e​ ​a​ ​t​e​m​p​l​a​t​e​ ​(​o​p​t​i​o​n​a​l​)
	 */
	chooseTemplate: string
	/**
	 * C​h​o​o​s​e​ ​.​.​.
	 */
	choose: string
	/**
	 * A​n​ ​e​n​d​p​o​i​n​t​ ​w​i​t​h​ ​t​h​i​s​ ​n​a​m​e​ ​a​l​r​e​a​d​y​ ​e​x​i​s​t​s​.
	 */
	endpointExists: string
	/**
	 * N​o​ ​A​P​I​ ​k​e​y​ ​p​r​o​v​i​d​e​d​,​ ​s​a​v​e​ ​a​n​y​w​a​y​?
	 */
	saveAnyway: string
	/**
	 * P​l​e​a​s​e​ ​f​i​l​l​ ​i​n​ ​a​l​l​ ​f​i​e​l​d​s​.
	 */
	fieldsMissing: string
	/**
	 * R​e​s​u​l​t​ ​c​o​p​i​e​d​ ​t​o​ ​c​l​i​p​b​o​a​r​d​!
	 */
	copied: string
	/**
	 * E​r​r​o​r​ ​c​o​p​y​i​n​g​:​ ​{​e​r​r​o​r​}
	 * @param {string} error
	 */
	copyError: RequiredParams<'error'>
}

export type TranslationFunctions = {
	/**
	 * Marked text ({wordCount} words)
	 */
	markedText: (arg: { wordCount: number }) => LocalizedString
	/**
	 * API Endpoint
	 */
	apiEndpoint: () => LocalizedString
	/**
	 * Configure
	 */
	configureApi: () => LocalizedString
	/**
	 * Fact Check
	 */
	factCheck: () => LocalizedString
	/**
	 * Tone of speech
	 */
	style: () => LocalizedString
	/**
	 * Friendly
	 */
	friendly: () => LocalizedString
	/**
	 * Neutral
	 */
	neutral: () => LocalizedString
	/**
	 * Critical
	 */
	critical: () => LocalizedString
	/**
	 * Response
	 */
	response: () => LocalizedString
	/**
	 * Answer length approx. {responseLength} words
	 */
	responseLength: (arg: { responseLength: number }) => LocalizedString
	/**
	 * Check
	 */
	apiCta: () => LocalizedString
	/**
	 * Result
	 */
	result: () => LocalizedString
	/**
	 * Checking...
	 */
	checkingProgress: () => LocalizedString
	/**
	 * Copy
	 */
	copy: () => LocalizedString
	/**
	 * Configured Endpoints
	 */
	configuredEndpoints: () => LocalizedString
	/**
	 * New Endpoint
	 */
	newEndpoint: () => LocalizedString
	/**
	 * Titel
	 */
	title: () => LocalizedString
	/**
	 * Example: Fact Check API
	 */
	titelPlaceholder: () => LocalizedString
	/**
	 * URL
	 */
	url: () => LocalizedString
	/**
	 * https://api.example.com/factcheck
	 */
	urlPlaceholder: () => LocalizedString
	/**
	 * API Key
	 */
	apiKey: () => LocalizedString
	/**
	 * Your API key
	 */
	apiKeyPlaceholder: () => LocalizedString
	/**
	 * Cancel
	 */
	cancel: () => LocalizedString
	/**
	 * add
	 */
	add: () => LocalizedString
	/**
	 * No endpoints added
	 */
	noConfiguredEndpoints: () => LocalizedString
	/**
	 * Edit text here ...
	 */
	editText: () => LocalizedString
	/**
	 * Not checked
	 */
	notChecked: () => LocalizedString
	/**
	 * Enter text here.
	 */
	enterText: () => LocalizedString
	/**
	 * Enter a person (optional)
	 */
	personLabel: () => LocalizedString
	/**
	 * Edgar Allen Poe
	 */
	personPlaceholder: () => LocalizedString
	/**
	 * Choose a template (optional)
	 */
	chooseTemplate: () => LocalizedString
	/**
	 * Choose ...
	 */
	choose: () => LocalizedString
	/**
	 * An endpoint with this name already exists.
	 */
	endpointExists: () => LocalizedString
	/**
	 * No API key provided, save anyway?
	 */
	saveAnyway: () => LocalizedString
	/**
	 * Please fill in all fields.
	 */
	fieldsMissing: () => LocalizedString
	/**
	 * Result copied to clipboard!
	 */
	copied: () => LocalizedString
	/**
	 * Error copying: {error}
	 */
	copyError: (arg: { error: string }) => LocalizedString
}

export type Formatters = {}
