/**
 * All duration units supported by date-vir.
 *
 * @category Unit
 */
export declare enum DurationUnit {
    Years = "years",
    Quarters = "quarters",
    Months = "months",
    Weeks = "weeks",
    Days = "days",
    Hours = "hours",
    Minutes = "minutes",
    Seconds = "seconds",
    Milliseconds = "milliseconds"
}
/**
 * A mapping of {@link DurationUnit} to to all of its values' singular duration names in English.
 *
 * @category Internal
 */
export declare const singularDurationUnitNames: {
    readonly years: "year";
    readonly quarters: "quarter";
    readonly months: "month";
    readonly weeks: "week";
    readonly days: "day";
    readonly hours: "hour";
    readonly minutes: "minute";
    readonly seconds: "second";
    readonly milliseconds: "millisecond";
};
/**
 * A mapping of {@link DurationUnit} to to all of its values' abbreviations in English.
 *
 * @category Internal
 */
export declare const durationUnitNameAbbreviations: {
    readonly years: "yr";
    readonly quarters: "q";
    readonly months: "mo";
    readonly weeks: "wk";
    readonly days: "d";
    readonly hours: "hr";
    readonly minutes: "min";
    readonly seconds: "sec";
    readonly milliseconds: "ms";
};
/**
 * Array of sorted {@link DurationUnit} possibilities: from smallest unit (milliseconds at index 0)
 * to longest unit (years).
 *
 * @category Internal
 */
export declare const orderedDurationUnits: readonly [DurationUnit.Milliseconds, DurationUnit.Seconds, DurationUnit.Minutes, DurationUnit.Hours, DurationUnit.Days, DurationUnit.Weeks, DurationUnit.Months, DurationUnit.Quarters, DurationUnit.Years];
/**
 * The maximum value, exclusive, for each duration unit before it should roll-over into the next
 * duration unit.
 *
 * @category Internal
 */
export declare const maxDurations: Readonly<Record<DurationUnit, number>>;
