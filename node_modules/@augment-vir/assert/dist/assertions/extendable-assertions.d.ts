import { booleanGuards } from './boolean.js';
import { boundaryGuards } from './boundary.js';
import { enumGuards } from './enum.js';
import { entryEqualityGuards } from './equality/entry-equality.js';
import { jsonEqualityGuards } from './equality/json-equality.js';
import { simpleEqualityGuards } from './equality/simple-equality.js';
import { httpGuards } from './http.js';
import { instanceGuards } from './instance.js';
import { keyGuards } from './keys.js';
import { lengthGuards } from './length.js';
import { nullishGuards } from './nullish.js';
import { numericGuards } from './numeric.js';
import { outputGuards } from './output.js';
import { primitiveGuards } from './primitive.js';
import { promiseGuards } from './promise.js';
import { regexpGuards } from './regexp.js';
import { runtimeTypeGuards } from './runtime-type.js';
import { throwGuards } from './throws.js';
import { uuidGuards } from './uuid.js';
import { valueGuards } from './values.js';
export declare const extendableAssertions: typeof booleanGuards.assert & typeof boundaryGuards.assert & typeof entryEqualityGuards.assert & typeof enumGuards.assert & typeof instanceGuards.assert & typeof jsonEqualityGuards.assert & typeof keyGuards.assert & typeof lengthGuards.assert & typeof nullishGuards.assert & typeof numericGuards.assert & typeof primitiveGuards.assert & typeof promiseGuards.assert & typeof regexpGuards.assert & typeof runtimeTypeGuards.assert & typeof simpleEqualityGuards.assert & typeof throwGuards.assert & typeof uuidGuards.assert & typeof valueGuards.assert & typeof httpGuards.assert & typeof outputGuards.assert;
/**
 * These overrides are required for more complex guards because TypeScript won't allow us to
 * maintain function type parameters when mapping such functions.
 */
export declare const guardOverrides: [
    typeof booleanGuards,
    typeof boundaryGuards,
    typeof entryEqualityGuards,
    typeof enumGuards,
    typeof instanceGuards,
    typeof jsonEqualityGuards,
    typeof keyGuards,
    typeof lengthGuards,
    typeof nullishGuards,
    typeof numericGuards,
    typeof primitiveGuards,
    typeof promiseGuards,
    typeof regexpGuards,
    typeof runtimeTypeGuards,
    typeof simpleEqualityGuards,
    typeof throwGuards,
    typeof uuidGuards,
    typeof valueGuards,
    typeof httpGuards,
    typeof outputGuards
];
